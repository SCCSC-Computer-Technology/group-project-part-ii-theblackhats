@page "/Defense"
@using System.Text.Json

<PageTitle>NFL Team Data</PageTitle>

<h1>NFL Defense Team</h1> 

<br />
<a href="#" class="btn btn-sm btn-danger">HomePage</a>
<br />

@if (DefenseList == null)
{
    <p>Loading...Defense</p>
}
else
{
    <div style="max-height: 600px; overflow-y: auto;">

        <table class="table table-striped table-bordered align-top bg-light">
            <thead>
                <tr>
                    <th>Team ID</th>
                    <th>Team Name</th>
                    <th>Defensive End</th>
                    <th>Left Defensive End</th>
                    <th>Defensive Tackle</th>
                    <th>Left Corner back</th>
                    <th>Left Defensive Tackle</th>
                    <th>Right Defensive End</th>
                    <th>Righ tDefensive Tackle</th>
                    <th>Right Corner back</th>
                    <th>Left Inside Linebacker</th>
                    <th>Left Outside Linebacker</th>
                    <th>Weak side Linebacker</th>
                    <th>Middle Linebacker</th>
                    <th>Strongside Linebacker</th>
                    <th>RightInside Linebacker</th>
                    <th>RightOutside Linebacker</th>
                    <th>Free Safety</th>
                    <th>Strong Safety</th>
                    <th>Nose Tackle</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var def in DefenseList)
                {
                    <tr>
                        <td>@def.TeamID</td>
                        <td>@def.TeamName</td>
                        <td>@def.DefensiveEnd</td>
                        <td>@def.LeftDefensiveEnd</td>
                        <td>@def.DefensiveTackle</td>
                        <td>@def.LeftCornerback</td>
                        <td>@def.LeftDefensiveTackle</td>
                        <td>@def.RightDefensiveEnd</td>
                        <td>@def.RightDefensiveTackle</td>
                        <td>@def.RightCornerback</td>
                        <td>@def.LeftInsideLinebacker</td>
                        <td>@def.LeftOutsideLinebacker</td>
                        <td>@def.WeaksideLinebacker</td>
                        <td>@def.MiddleLinebacker</td>
                        <td>@def.StrongsideLinebacker</td>
                        <td>@def.RightInsideLinebacker</td>
                        <td>@def.RightOutsideLinebacker</td>
                        <td>@def.FreeSafety</td>
                        <td>@def.StrongSafety</td>
                        <td>@def.NoseTackle</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <br />
    <form>
        <label>
            Search by Team Name:
        </label>
        <input type="text" @bind="DTeamName"/>
        <button type="button" class="btn btn-warning" @onclick=GetDefense>SUBMIT></button>
    </form>
}

@code
{
    private class NFLdefenseTeam
    {
        public string? TeamID { get; set; }
        public string? TeamName { get; set; }
        public string? DefensiveEnd { get; set; }
        public string? LeftDefensiveEnd { get; set; }
        public string? DefensiveTackle { get; set; }
        public string? LeftCornerback { get; set; }
        public string? LeftDefensiveTackle { get; set; }
        public string? RightDefensiveEnd { get; set; }
        public string? RightDefensiveTackle { get; set; }
        public string? RightCornerback { get; set; }
        public string? LeftInsideLinebacker { get; set; }
        public string? LeftOutsideLinebacker { get; set; }
        public string? WeaksideLinebacker { get; set; }
        public string? MiddleLinebacker { get; set; }
        public string? StrongsideLinebacker { get; set; }
        public string? RightInsideLinebacker { get; set; }
        public string? RightOutsideLinebacker { get; set; }
        public string? FreeSafety { get; set; }
        public string? StrongSafety { get; set; }
        public string? NoseTackle { get; set; }
    }
    private List<NFLdefenseTeam> DefenseList;
    private string DTeamName;

    string API_URI = "https://localhost:7275/api/BlackHatsApp/";

    protected override async Task OnInitializedAsync()
    {
        HttpClient httpClient = new HttpClient();
        HttpResponseMessage response = await httpClient.GetAsync(API_URI + "GetNFLDefense");
        httpClient.Dispose();
        using var responseStream = await response.Content.ReadAsStreamAsync();
        DefenseList = await JsonSerializer.DeserializeAsync<List<NFLdefenseTeam>>(responseStream);
    }

    public async Task GetDefense()
    {
        HttpClient httpClient1 = new HttpClient();
        HttpClient httpClient = httpClient1;
        HttpResponseMessage response = await httpClient.GetAsync(API_URI + "GetNFLDefense");
        httpClient.Dispose();
        using var responseStream = await response.Content.ReadAsStreamAsync();
        var searchteam = await JsonSerializer.DeserializeAsync<List<NFLdefenseTeam>>(responseStream);
        DefenseList = searchteam.Where(teamList => teamList.TeamName == DTeamName).ToList();
    }
}

