@page "/Offense"
@using System.Text.Json

<PageTitle>NFL Team Data</PageTitle>

<h1>NFL Offense Team</h1> 

<br />
<a href="#" class="btn btn-sm btn-danger">HomePage</a>
<br />

@if (OffenseList == null)
{
    <p>Loading...Offense</p>
}
else
{
    <div style="max-height: 600px; overflow-y: auto;">

        <table class="table table-striped table-bordered align-top bg-light">
            <thead>
                <tr>
                    <th>Team ID</th>
                    <th>Team Name</th>
                    <th>Quarterback</th>
                    <th>Running Back</th>
                    <th>Wide Receiver 1</th>
                    <th>Wide Receiver 2</th>
                    <th>Wide Receiver 3</th>
                    <th>Tight End</th>
                    <th>Left Offensive Tackle</th>
                    <th>Left Offensive Guard</th>
                    <th>Center</th>
                    <th>Right Offensive Guard</th>
                    <th>Right Offensive Tackle</th>
                </tr>
             </thead>
             <tbody>
                @foreach (var prod in OffenseList)
                {
                    <tr>
                        <td>@prod.TeamID</td>
                        <td>@prod.TeamName</td>
                        <td>@prod.Quarterback</td>
                        <td>@prod.RunningBack</td>
                        <td>@prod.WideReceiver1</td>
                        <td>@prod.WideReceiver2</td>
                        <td>@prod.WideReceiver3</td>
                        <td>@prod.TightEnd</td>
                        <td>@prod.LeftOffensiveTackle</td>
                        <td>@prod.LeftOffensiveGuard</td>
                        <td>@prod.Center</td>
                        <td>@prod.RightOffensiveGuard</td>
                        <td>@prod.RightOffensiveTackle</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <br />
    <form>
        <label>
            Search by Team Name:
        </label>
        <input type="text" @bind="OTeamName"/>
        <button type="button" class="btn btn-warning" @onclick=GetOffense>SUBMIT></button>
    </form>
}

@code 
{
    private class NFLoffenseTeam
    {
        public string? TeamID { get; set; }
        public string? TeamName { get; set; }
        public string? Quarterback { get; set; }
        public string? RunningBack { get; set; }
        public string? WideReceiver1 { get; set; }
        public string? WideReceiver2 { get; set; }
        public string? WideReceiver3 { get; set; }
        public string? TightEnd { get; set; }
        public string? LeftOffensiveTackle { get; set; }
        public string? LeftOffensiveGuard { get; set; }
        public string? Center { get; set; }
        public string? RightOffensiveGuard { get; set; }
        public string? RightOffensiveTackle { get; set; }

    }
    private List<NFLoffenseTeam> OffenseList;
    private string OTeamName;

    string API_URI = "https://localhost:7275/api/BlackHatsApp/";

    protected override async Task OnInitializedAsync()
    {
        HttpClient httpClient = new HttpClient();
        HttpResponseMessage response = await httpClient.GetAsync(API_URI + "GetNFLOffense");
        httpClient.Dispose();
        using var responseStream = await response.Content.ReadAsStreamAsync();
        OffenseList = await JsonSerializer.DeserializeAsync<List<NFLoffenseTeam>>(responseStream);
    }

    public async Task GetOffense()
    {
        HttpClient httpClient = new HttpClient();
        HttpResponseMessage response = await httpClient.GetAsync(API_URI + "GetNFLOffense");
        httpClient.Dispose();
        using var responseStream = await response.Content.ReadAsStreamAsync();
        var searchteam = await JsonSerializer.DeserializeAsync<List<NFLoffenseTeam>>(responseStream);
        OffenseList = searchteam.Where(teamList => teamList.TeamName == OTeamName).ToList();
    }
}
