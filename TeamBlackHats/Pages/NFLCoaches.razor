@page "/Coach"
@using System.Text.Json

<PageTitle>NFL Team Data</PageTitle>

<h1>NFL Coaches</h1> 

<br />
<a href="#" class="btn btn-sm btn-danger">HomePage</a>
<br />

@if (Coaches == null)
{
    <p>Loading...Cocahes</p>
}
else
{
    <div style="max-height: 600px; overflow-y: auto;">

        <table class="table table-striped table-bordered align-top bg-light">
            <thead>
                <tr>
                    <th>Team ID</th>
                    <th>Team Name</th>
                    <th>HeadCoach</th>
                    <th>First Year</th>
                    <th>Total Years</th>
                    <th>Rank</th>
                    <th>Offensive Coordinator</th>
                    <th>Defensive Coordinator</th>
                </tr>
             </thead>
             <tbody>
                @foreach (var c in Coaches)
                {
                    <tr>
                        <td>@c.TeamID</td>
                        <td>@c.TeamName</td>
                        <td>@c.HeadCoach</td>
                        <td>@c.FirstYear</td>
                        <td>@c.TotalYears</td>
                        <td>@c.Rank</td>
                        <td>@c.OffensiveCoordinator</td>
                        <td>@c.DefensiveCoordinator</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <br />
    <form>
        <label>
            Search by Team ID:
        </label>
        <input type="text" @bind="teamID"/>
        <button type="button" class="btn btn-warning" @onclick=GetCoach>SUBMIT></button>
    </form>
}

@code 
{
    private class NFLcoaches
    {
        public string? TeamID { get; set; }
        public string? TeamName { get; set; }
        public string? HeadCoach { get; set; }
        public int FirstYear { get; set; }
        public int TotalYears { get; set; }
        public int Rank { get; set; }
        public string? OffensiveCoordinator { get; set; }
        public string? DefensiveCoordinator { get; set; }

    }

    private List<NFLcoaches> Coaches;
    private string teamID;

    string API_URI = "https://localhost:7275/api/BlackHatsApp/";

    protected override async Task OnInitializedAsync()
    {
        HttpClient httpClient = new HttpClient();
        HttpResponseMessage response = await httpClient.GetAsync(API_URI + "GetNFLCoaches");
        httpClient.Dispose();
        using var responseStream = await response.Content.ReadAsStreamAsync();
        Coaches = await JsonSerializer.DeserializeAsync<List<NFLcoaches>>(responseStream);

    }

    public async Task GetCoach()
    {
        HttpClient httpClient = new HttpClient();
        HttpResponseMessage httpResponseMessage = await httpClient.GetAsync(API_URI + "GetNFLCoaches");
        HttpResponseMessage response = httpResponseMessage;
        httpClient.Dispose();
        using var responseStream = await response.Content.ReadAsStreamAsync();
        var searchteam = await JsonSerializer.DeserializeAsync<List<NFLcoaches>>(responseStream);
        Coaches = searchteam.Where(teamList => teamList.TeamID == teamID).ToList();
    }
}