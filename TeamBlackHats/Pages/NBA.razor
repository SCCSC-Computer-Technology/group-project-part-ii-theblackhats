@page "/NBA"
@using System.Text.Json

<h3>NBA Stats</h3>
@if (players == null)
{
    <p>Loading...NBA</p>

}
else
{
    <div style="max-height: 300px; overflow-y: auto;">
        <table class="table table-success table-striped">
            <thead>
                <tr>
                    <th>Player</th>
                    <th>Pos</th>
                    <th>Tm</th>
                    <th>FG</th>
                    <th>TRB</th>
                    <th>FT</th>
                    <th>AST</th>
                    <th>STL</th>
                    <th>BLK</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var team in players)
                {
                    <tr>
                        <td>@team.Player</td>
                        <td>@team.Pos</td>
                        <td>@team.Tm</td>
                        <td>@team.FG</td>
                        <td>@team.TRB</td>
                        <td>@team.FT</td>
                        <td>@team.AST</td>
                        <td>@team.STL</td>
                        <td>@team.BLK</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <hr />
    <form>
        <label>
            Basketball Player Search
        </label>
        <div class="form-floating mb-3">
            <input type="text" class="form-control" id="floatingInput" @bind="playername" />
            <button type="button" class="btn btn-primary" @onclick=playernamesearch>submit</button>
            <label for="floatingInput">Search Player Name</label>
        </div>
    </form>
}

@code {
    private class NBAPlayer
    {
        public string Player { get; set; }
        public string Pos { get; set; }
        public string Tm { get; set; }
        public string FG { get; set; }
        public string TRB { get; set; }
        public string FT { get; set; }
        public string AST { get; set; }
        public string STL { get; set; }
        public string BLK { get; set; }
    }
    private List<NBAPlayer> players;
    private string playername;

    string API_URL = "https://localhost:7275/api/BlackHatsApp/";

    protected override async Task OnInitializedAsync()
    {
        HttpClient httpClient = new HttpClient();
        HttpResponseMessage response = await httpClient.GetAsync(API_URL + "GetNBAPlayerStats");
        httpClient.Dispose();
        using var responseStream = await response.Content.ReadAsStreamAsync();
        players = await JsonSerializer.DeserializeAsync<List<NBAPlayer>>(responseStream);
    }
    private async Task playernamesearch()
    {
        HttpClient httpClient = new HttpClient();
        HttpResponseMessage response = await httpClient.GetAsync(API_URL + "GetNBAPlayerStats");
        httpClient.Dispose();
        using var responseStream = await response.Content.ReadAsStreamAsync();
        var allplayers = await JsonSerializer.DeserializeAsync<List<NBAPlayer>>(responseStream);
        players = allplayers.Where(team => team.Player == playername).ToList();
    }
}